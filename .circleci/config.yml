# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
parameters:
  workflow:
   new-workflow:
      type: enum
      default: test
      description: The workflow to trigger.
      enum: [test, deploy]

jobs:
  build:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang:1.17
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports
      - run:
          name: build binary to bin
          command: make build
      - persist_to_workspace:
          root: .
          paths:
            - bin
  
  deploy:
    docker:
      - image: cimg/go:1.18.3
    steps:
      - checkout
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          environment:
            NUM: << pipeline.number >>
            TAG: << pipeline.git.tag >>
          command: |
            docker build -t $DOCKER_TAG:latest .
            docker tag $DOCKER_TAG:latest $DOCKER_TAG:$NUM-$TAG
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_TAG:latest
            docker push $DOCKER_TAG:$NUM-$TAG

  test-job:
    machine:
      image: ubuntu-2204:current
    steps:
      - run: echo 'Testing...'

  deploy-job:
    machine:
      image: ubuntu-2204:current
    steps:
      - run: echo 'Deploying...'

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  initial-build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    when:
      or:
        - equal: [ main, << pipeline.git.branch >> ]
        - equal: [ staging, << pipeline.git.branch >> ]
    jobs:
      - build
      - wait-deploy:
          type: approval
          requires: 
          - build
      - deploy:
          requires:
            - wait-deploy

  new-workflow:
    test:
      when: { equal: [ test, << pipeline.parameters.workflow >> ] }
      jobs:
        - test-job
    deploy:
      when: { equal: [ deploy, << pipeline.parameters.workflow >> ] }
      jobs:
        - deploy-job
